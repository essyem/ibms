# Generated by Django 5.2.3 on 2025-10-20 06:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('portal', '0022_useremailverification_userprofile'),
        ('sites', '0002_alter_domain_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='order',
            name='customer_email',
            field=models.EmailField(default='walk-in@example.com', max_length=254),
        ),
        migrations.AddField(
            model_name='order',
            name='customer_name',
            field=models.CharField(default='Walk-in Customer', max_length=200),
        ),
        migrations.AddField(
            model_name='order',
            name='customer_phone',
            field=models.CharField(default='0000000000', max_length=20),
        ),
        migrations.AddField(
            model_name='order',
            name='delivery_additional_info',
            field=models.TextField(blank=True, help_text='Additional delivery instructions'),
        ),
        migrations.AddField(
            model_name='order',
            name='delivery_building',
            field=models.CharField(default='', help_text='Building name or number', max_length=100),
        ),
        migrations.AddField(
            model_name='order',
            name='delivery_flat',
            field=models.CharField(blank=True, help_text='Flat/Apartment number (optional)', max_length=50),
        ),
        migrations.AddField(
            model_name='order',
            name='delivery_street',
            field=models.CharField(default='', help_text='Street name or number', max_length=200),
        ),
        migrations.AddField(
            model_name='order',
            name='delivery_zone',
            field=models.CharField(default='', help_text='Zone or Area', max_length=100),
        ),
        migrations.AddField(
            model_name='order',
            name='payment_method',
            field=models.CharField(choices=[('cod', 'Cash on Delivery'), ('bank_transfer', 'Bank Transfer/Fawran Method')], default='cod', max_length=20),
        ),
        migrations.AddField(
            model_name='order',
            name='transfer_receipt',
            field=models.FileField(blank=True, help_text='Upload transfer receipt for Bank Transfer/Fawran payments', null=True, upload_to='transfer_receipts/'),
        ),
        migrations.AlterField(
            model_name='order',
            name='delivery_address',
            field=models.TextField(blank=True, help_text='Legacy address field'),
        ),
        migrations.AlterField(
            model_name='order',
            name='preferred_contact',
            field=models.CharField(blank=True, help_text='Legacy contact field', max_length=100),
        ),
        migrations.CreateModel(
            name='PaymentReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('pos', 'POS'), ('bank_transfer', 'Bank Transfer'), ('cheque', 'Cheque'), ('mobile_payment', 'Mobile Payment'), ('other', 'Other')], default='cash', max_length=20)),
                ('amount_received', models.DecimalField(decimal_places=2, max_digits=12)),
                ('amount_due', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('change_given', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('reference_number', models.CharField(blank=True, help_text='Transaction/Reference number', max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('issued', 'Issued'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='issued', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='portal.customer', verbose_name='Customer')),
                ('invoice', models.ForeignKey(blank=True, help_text='Invoice this payment is for (optional)', null=True, on_delete=django.db.models.deletion.PROTECT, to='portal.invoice')),
                ('issued_by', models.ForeignKey(help_text='User who issued this receipt', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quotation_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('valid_until', models.DateField(help_text='Quotation validity date')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('expired', 'Expired'), ('converted', 'Converted to Invoice')], default='draft', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('terms_conditions', models.TextField(blank=True, help_text='Terms and conditions for this quotation')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_type', models.CharField(choices=[('percent', 'Percentage'), ('amount', 'Fixed Amount')], default='percent', max_length=10)),
                ('discount_value', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('converted_invoice', models.ForeignKey(blank=True, help_text='Invoice created from this quotation', null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.invoice')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='portal.customer', verbose_name='Customer')),
                ('site', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='QuotationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('use_product_price', models.BooleanField(default=True, help_text="If True, uses product's unit price. If False, allows custom price.")),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.product')),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='portal.quotation')),
                ('site', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
